{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/field/field.component.html","webpack:///./src/app/field/field.component.scss","webpack:///./src/app/field/field.component.ts","webpack:///./src/app/preset/preset.component.html","webpack:///./src/app/preset/preset.component.scss","webpack:///./src/app/preset/preset.component.ts","webpack:///./src/app/presets/presets.component.html","webpack:///./src/app/presets/presets.component.scss","webpack:///./src/app/presets/presets.component.ts","webpack:///./src/app/theme/theme.component.html","webpack:///./src/app/theme/theme.component.scss","webpack:///./src/app/theme/theme.component.ts","webpack:///./src/app/themes/themes.component.html","webpack:///./src/app/themes/themes.component.scss","webpack:///./src/app/themes/themes.component.ts","webpack:///./src/app/update/update.component.html","webpack:///./src/app/update/update.component.scss","webpack:///./src/app/update/update.component.ts","webpack:///./src/app/updates/updates.component.html","webpack:///./src/app/updates/updates.component.scss","webpack:///./src/app/updates/updates.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ThemeModel} from \"./model/theme.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n    private httpClient: HttpClient;\n\n    private HOST = 'localhost/api';\n\n    private dashboardUrl: string = this.HOST + '/';\n    private themeUrl: string = this.HOST + '/theme';\n    private presetUrl: string = this.HOST + '/preset';\n\n    constructor(httpClient: HttpClient) {\n        this.httpClient = httpClient;\n    }\n\n    public getDashboard() {\n        return this.httpClient.get(this.dashboardUrl);\n    }\n\n    public getThemes() {\n        return this.httpClient.get(this.themeUrl);\n    }\n\n    public createTheme(theme: ThemeModel) {\n        return this.httpClient.post(this.themeUrl + '/new', theme)\n    }\n\n    public saveTheme(theme: ThemeModel) {\n        return this.httpClient.put(this.themeUrl + '/' + theme.id + '/edit', theme);\n    }\n\n    public getPresets() {\n        return this.httpClient.get(this.presetUrl);\n    }\n\n    public getTheme(id: number) {\n        return this.httpClient.get(this.themeUrl + '/' + id);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ThemesComponent} from \"./themes/themes.component\";\nimport {UpdatesComponent} from \"./updates/updates.component\";\nimport {PresetsComponent} from \"./presets/presets.component\";\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\nimport {ThemeComponent} from \"./theme/theme.component\";\n\nconst routes: Routes = [\n    {path: '', component: DashboardComponent},\n    {path: 'themes', component: ThemesComponent},\n    {path: 'updates', component: UpdatesComponent},\n    {path: 'presets', component: PresetsComponent},\n    {path: 'theme/:id', component: ThemeComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav class=\\\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\\\">\\n    <a class=\\\"navbar-brand col-sm-3 col-md-2 mr-0\\\" href=\\\"#\\\">Company name</a>\\n</nav>\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <nav class=\\\"col-md-2 d-none d-md-block bg-light sidebar\\\">\\n            <div class=\\\"sidebar-sticky\\\">\\n                <ul class=\\\"nav flex-column\\\">\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">\\n                            Dashboard\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/themes\\\">\\n                            Themes\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/updates\\\">\\n                            Updates\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/presets\\\">\\n                            Presets\\n                        </a>\\n                    </li>\\n                </ul>\\n            </div>\\n        </nav>\\n\\n        <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4\\\">\\n            <router-outlet></router-outlet>\\n        </main>\\n    </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'backend';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {PresetComponent} from './preset/preset.component';\nimport {ThemeComponent} from './theme/theme.component';\nimport {FieldComponent} from './field/field.component';\nimport {ThemesComponent} from './themes/themes.component';\nimport {PresetsComponent} from './presets/presets.component';\nimport {UpdateComponent} from './update/update.component';\nimport {UpdatesComponent} from './updates/updates.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PresetComponent,\n        ThemeComponent,\n        FieldComponent,\n        ThemesComponent,\n        PresetsComponent,\n        UpdateComponent,\n        UpdatesComponent,\n        DashboardComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<p>\\n    Dashboard\\n</p>\\n\\n<table>\\n    <thead>\\n    <tr>\\n        <th>Theme</th>\\n        <th>Affiliate</th>\\n        <th>Last Update</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let theme of themes\\\" data-id=\\\"{{ theme.id }}\\\">\\n            <td>{{ theme.name }}</td>\\n            <td>{{ theme.affiliateId }}</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {DashboardModel} from \"../model/dashboard.model\";\nimport {ApiService} from \"../api.service\";\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n    public themes: DashboardModel[];\n    private apiService: ApiService;\n\n    constructor(apiService: ApiService) {\n        this.apiService = apiService;\n        this.apiService.getDashboard().subscribe((data: DashboardModel[]) => this.themes = data);\n    }\n\n    ngOnInit() {\n    }\n}\n","module.exports = \"<div class=\\\"field form-group\\\" *ngIf=\\\"field\\\">\\n    <div class=\\\"form-group\\\">\\n        <label>Name:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"field.id\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Source:</label>\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"field.source\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Presets:</label>\\n        <div class=\\\"field-presets\\\">\\n            <button type=\\\"button\\\" class=\\\"field-preset btn\\\"\\n                    (click)=\\\"changePresetState(preset.id)\\\"\\n                 [ngClass]=\\\"{'btn-secondary' : !isPresetActive(field.presets, preset),\\n                            'btn-primary': isPresetActive(field.presets, preset)}\\\"\\n                 *ngFor=\\\"let preset of presets\\\"\\n            >\\n                <label>{{ preset.name }}</label>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpZWxkL2ZpZWxkLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {FieldModel} from \"../model/field.model\";\nimport {PresetModel} from \"../model/preset.model\";\n\n@Component({\n    selector: 'app-field',\n    templateUrl: './field.component.html',\n    styleUrls: ['./field.component.scss']\n})\nexport class FieldComponent implements OnInit {\n    @Input()\n    public field: FieldModel;\n    @Input()\n    public name: string;\n    @Input()\n    public presets: PresetModel[];\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    public isPresetActive(presets: PresetModel[], preset: PresetModel): boolean {\n        if (presets === undefined || preset === undefined) {\n            return false;\n        }\n        return (undefined !== presets.find((preset1: PresetModel) => { return preset.id === preset1.id}));\n    }\n\n    public changePresetState(id: number) {\n        let fieldPreset: PresetModel = this.field.presets.find((presetField: PresetModel) => { return presetField.id === id});\n        if (fieldPreset === undefined) {\n            console.log('test');\n            let preset: PresetModel = this.presets.find(function (element) {\n                return element.id === id;\n            });\n            this.field.presets.push(preset);\n        } else {\n            this.field.presets = this.field.presets.filter((preset: PresetModel) => { return preset.id !== id});\n        }\n    }\n}\n","module.exports = \"<p>\\n  preset works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZXNldC9wcmVzZXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preset',\n  templateUrl: './preset.component.html',\n  styleUrls: ['./preset.component.scss']\n})\nexport class PresetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  presets works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZXNldHMvcHJlc2V0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-presets',\n  templateUrl: './presets.component.html',\n  styleUrls: ['./presets.component.scss']\n})\nexport class PresetsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"theme-edit\\\" *ngIf=\\\"theme\\\">\\n    <div class=\\\"form-group\\\">\\n        <label>Name</label>\\n        <input [(ngModel)]=\\\"theme.name\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>AffiliateId</label>\\n        <input [(ngModel)]=\\\"theme.affiliateId\\\" class=\\\"form-control\\\" type=\\\"number\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Fields</label>\\n        <div class=\\\"fields\\\" *ngIf=\\\"theme.fields\\\">\\n            <div *ngFor=\\\"let field of theme.fields\\\" class=\\\"field\\\">\\n                <app-field [presets]=\\\"presets\\\" [field]=\\\"field\\\"></app-field>\\n            </div>\\n            <button (click)=\\\"addField()\\\">Add Field</button>\\n        </div>\\n    </div>\\n\\n    <button (click)=\\\"saveTheme()\\\">Save</button>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RoZW1lL3RoZW1lLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {ThemeModel} from \"../model/theme.model\";\nimport {PresetModel} from \"../model/preset.model\";\nimport {FieldModel} from \"../model/field.model\";\nimport {ApiService} from \"../api.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n    selector: 'app-theme',\n    templateUrl: './theme.component.html',\n    styleUrls: ['./theme.component.scss']\n})\nexport class ThemeComponent implements OnInit {\n    public theme: ThemeModel;\n    public presets: PresetModel[];\n    private apiService: ApiService;\n    private route: ActivatedRoute;\n\n    constructor(apiService: ApiService, route: ActivatedRoute) {\n        this.apiService = apiService;\n        this.route = route;\n    }\n\n    ngOnInit() {\n        this.getTheme();\n        this.getPresets();\n    }\n\n    public saveTheme(): void {\n        let themeData = Object.assign({}, this.theme);\n        themeData.fields.forEach((value: FieldModel, index) => {\n            themeData.fields[index].presets.reduce((carry: any, preset: PresetModel) => {\n                carry.push(preset.id);\n                return carry;\n            }, []);\n        });\n        this.apiService.saveTheme(themeData).subscribe();\n    }\n\n    public addField(): void {\n        this.theme.fields.push({});\n    }\n\n    private getTheme() {\n        let id: number = Number.parseInt(this.route.snapshot.paramMap.get('id'));\n        this.apiService.getTheme(id).subscribe((data: ThemeModel) => {this.theme = data});\n    }\n\n    private getPresets() {\n        this.apiService.getPresets().subscribe((data: PresetModel[]) => {this.presets = data;});\n    }\n}\n","module.exports = \"<button (click)=\\\"createNew()\\\">Create</button>\\n<table>\\n    <thead>\\n    <tr>\\n        <th>Name</th>\\n        <th>Affiliate</th>\\n        <th>Last Update</th>\\n        <th>Status</th>\\n        <th>Action</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let theme of themes\\\" data-id=\\\"{{ theme.id }}\\\">\\n            <td>{{ theme.name }}</td>\\n            <td>{{ theme.affiliateId }}</td>\\n            <td></td>\\n            <td></td>\\n            <td>\\n                <button><a routerLink=\\\"/theme/{{theme.id}}\\\">Edit</a></button>\\n                <button>>Update</button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RoZW1lcy90aGVtZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ThemeModel} from \"../model/theme.model\";\nimport {ApiService} from \"../api.service\";\nimport {PresetModel} from \"../model/preset.model\";\n\n@Component({\n    selector: 'app-themes',\n    templateUrl: './themes.component.html',\n    styleUrls: ['./themes.component.scss']\n})\nexport class ThemesComponent implements OnInit {\n    public themes: ThemeModel[];\n    public theme: ThemeModel;\n\n    public presets: PresetModel[];\n\n    private apiService: ApiService;\n\n    constructor(apiService: ApiService) {\n        this.apiService = apiService;\n    }\n\n    ngOnInit() {\n        this.apiService.getThemes().subscribe((data: ThemeModel[]) => {this.themes = data});\n        this.apiService.getPresets().subscribe((data: PresetModel[]) => {this.presets = data});\n    }\n\n    public createNew(): void {\n        this.theme = {};\n    }\n\n    public saveTheme() {\n        if (this.theme.id) {\n            this.apiService.saveTheme(this.theme).subscribe((data) => {\n            });\n            this.themes[this.theme.id] = Object.assign(this.themes[this.theme.id], this.theme);\n        } else {\n            this.apiService.createTheme(this.theme);\n            this.themes.push(this.theme);\n        }\n    }\n\n    public setTheme(id: number) {\n        this.apiService.getTheme(id).subscribe((data: ThemeModel) => {\n            this.theme = data;\n        });\n    }\n}\n","module.exports = \"<p>\\n  update works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS91cGRhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  updates works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZXMvdXBkYXRlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-updates',\n  templateUrl: './updates.component.html',\n  styleUrls: ['./updates.component.scss']\n})\nexport class UpdatesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}